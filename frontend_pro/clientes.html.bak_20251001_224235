<!doctype html><html lang='es'><head>
<meta charset='utf-8'/><meta name='viewport' content='width=device-width,initial-scale=1'/>
<title>CIDESA LOGISTICS - Alta de Clientes</title><link rel='stylesheet' href='./styles.css'/>
</head><body>
<aside><div class='brand'><div class='logo'><span>CL</span></div>
<div><strong>CIDESA LOGISTICS</strong><div class='badge'>Modulo: Clientes</div></div></div>
<nav>
  <a href='./index.html'>Inicio</a>
  <a href='./clientes.html'>Alta de Clientes</a>
</nav></aside>

<main>
  <div class='card'>
    <h1>Alta de Clientes</h1>
    <div class='row'><button onclick=""location.href='index.html'"">Regresar</button></div>
  </div>

  <div class='card'>
    <h2>Nuevo / Editar</h2>

    <form id='frmCliente' class='form-grid' style='align-items:flex-start'>
      <input type='hidden' id='cliente_id'/>

      <!-- Fila 1: Razon, RFC, Telefono -->
      <div class='col-span-6'><label>Nombre / Razon social</label><input id='razon_social' required/></div>
      <div class='col-span-3'><label>RFC</label><input id='rfc' required placeholder='12 o 13 chars'/></div>
      <div class='col-span-3'><label>Telefono</label><input id='telefono'/></div>

      <!-- Fila 2: Emails -->
      <div class='col-span-6'><label>Email</label><input id='email' type='email'/></div>
      <div class='col-span-6'><label>Email principal</label><input id='email_principal' type='email'/></div>

      <!-- (Opcional) PDF(s). Si no lo usas, puedes ignorarlo; no rompe nada -->
      <div class='col-span-6'><label>PDF(s) del cliente</label><input id='pdfs' type='file' accept='application/pdf,.pdf' multiple/></div>

      <!-- Contactos -->
      <div class='col-span-12 contacts' style='margin-top:4px'>
        <h3>Contactos</h3>
        <div id='contactos'></div>
        <button type='button' class='primary' id='btnAddContacto'>+ Anadir contacto</button>
      </div>

      <!-- Observaciones AL FINAL -->
      <div class='col-span-12'><label>Observaciones</label><textarea id='observaciones' rows='3'></textarea></div>

      <!-- Acciones -->
      <div class='col-span-12'>
        <button type='submit' class='primary' id='btnGuardar'>Guardar</button>
        <button type='button' id='btnNuevo'>Limpiar</button>
      </div>
    </form>
  </div>

  <div class='card'>
    <h2>Clientes registrados</h2>
    <div class='row'>
      <input id='filtro' placeholder='Buscar por nombre o RFC' style='min-width:280px'/>
      <button id='btnRefrescar'>Refrescar</button>
    </div>
    <div style='margin-top:10px;overflow:auto'>
      <table id='tblClientes'><thead><tr>
        <th>ID</th><th>Nombre / Razon social</th><th>RFC</th><th>Email</th><th>Telefono</th><th>Acciones</th>
      </tr></thead><tbody></tbody></table>
    </div>
  </div>
</main>

<template id='tplContacto'>
  <div class='row' style='align-items:flex-end;margin-bottom:8px'>
    <div style='min-width:220px'><label>Nombre</label><input class='c-nombre' required placeholder='Nombre de contacto'/></div>
    <div style='min-width:200px'><label>Telefono</label><input class='c-tel' placeholder='Telefono'/></div>
    <div style='min-width:200px'><label>Area</label><input class='c-area' placeholder='Area (ej. Ventas)'/></div>
    <div style='min-width:220px'><label>Email</label><input class='c-email' type='email' placeholder='correo@dominio.com'/></div>
    <button type='button' class='btnDel'>Eliminar</button>
  </div>
</template>

<script>
const API = "http://127.0.0.1:8000";
const $ = s => document.querySelector(s);
const Backup creado: $Clientes.bak_$stamp = s => Array.from(document.querySelectorAll(s));
const contactosDiv = #contactos, tpl = #tplContacto;

function addContacto(nombre='', tel='', area='', email=''){
  const node = tpl.content.cloneNode(true);
  node.querySelector('.c-nombre').value = nombre;
  node.querySelector('.c-tel').value = tel;
  node.querySelector('.c-area').value = area;
  node.querySelector('.c-email').value = email;
  const row = node.querySelector('.row');
  row.querySelector('.btnDel').onclick = () => row.remove();
  contactosDiv.appendChild(node);
}
function getContactos(){
  return Backup creado: $Clientes.bak_$stamp('#contactos .row').map(row => ({
    nombre: row.querySelector('.c-nombre').value.trim(),
    telefono: row.querySelector('.c-tel').value.trim() || null,
    area: row.querySelector('.c-area').value.trim() || null,
    email: row.querySelector('.c-email').value.trim() || null
  })).filter(c => c.nombre.length>0);
}
function limpiarFormulario(){
  #cliente_id.value=''; #razon_social.value=''; #rfc.value='';
  #telefono.value=''; #email.value=''; #email_principal.value='';
  #observaciones.value=''; #pdfs.value=''; contactosDiv.innerHTML='';
  addContacto('Contacto 1','','General',''); addContacto('Contacto 2','','Ventas','');
}
function readPdfsAsBase64(input){
  const files = Array.from(input.files||[]);
  return Promise.all(files.map(f => new Promise((res,rej)=>{
    if(!/\.pdf$/i.test(f.name)) return res(null);
    const r=new FileReader();
    r.onload=()=>res({filename:f.name, content:String(r.result).split(',')[1], mime:f.type||'application/pdf', size:f.size});
    r.onerror=()=>rej('No pude leer '+f.name);
    r.readAsDataURL(f);
  }))).then(arr => arr.filter(Boolean));
}
async function guardarCliente(e){
  e.preventDefault();
  const anexos = await readPdfsAsBase64(#pdfs);
  const payload = {
    razon_social: #razon_social.value.trim(),
    rfc: #rfc.value.trim().toUpperCase(),
    telefono: #telefono.value.trim() || null,
    email: #email.value.trim() || null,
    email_principal: #email_principal.value.trim() || null,
    observaciones: #observaciones.value.trim() || null,
    contactos: getContactos(),
    anexos
  };
  const id = #cliente_id.value;
  const url = id ? ${API}/clientes/ : ${API}/clientes/;
  const method = id ? 'PUT' : 'POST';
  const r = await fetch(url,{method,headers:{'Content-Type':'application/json'},body:JSON.stringify(payload)});
  if(!r.ok){ const t=await r.text(); alert('Error: '+t); return; }
  await cargarClientes(); limpiarFormulario(); alert('Cliente guardado');
}
async function cargarClientes(){
  const r = await fetch(${API}/clientes/); const data = r.ok ? await r.json() : [];
  const term = #filtro.value.trim().toLowerCase(); const tbody = #tblClientes tbody; tbody.innerHTML='';
  data.filter(x => (x.razon_social+' '+x.rfc).toLowerCase().includes(term)).forEach(x=>{
    const tr = document.createElement('tr');
    tr.innerHTML = 
      <td></td><td></td><td></td>
      <td></td><td></td>
      <td class='actions'>
        <button data-id='' class='btnFiles'>Archivos</button>
        <button data-id='' class='btnEdit'>Editar</button>
      </td>;
    tbody.appendChild(tr);
  });
  Backup creado: $Clientes.bak_$stamp('.btnEdit').forEach(b => b.onclick = ()=> editarCliente(parseInt(b.dataset.id)));
  Backup creado: $Clientes.bak_$stamp('.btnFiles').forEach(b => b.onclick = ()=> verArchivos(parseInt(b.dataset.id)));
}
async function verArchivos(id){
  const r = await fetch(${API}/clientes/files/);
  const files = r.ok ? await r.json() : [];
  if(files.length===0){ alert('Sin archivos PDF'); return; }
  const menu = files.map(f=>${f.filename} ( KB)).join('\\n');
  if(confirm('Abrir todos los PDF?\\n\\n'+menu)){
    files.forEach(f=>window.open(${API}/clientes/files//,'_blank'));
  }
}
async function editarCliente(id){
  const r = await fetch(${API}/clientes/); const data = r.ok ? await r.json() : [];
  const x = data.find(k=>k.cliente_id===id); if(!x){alert('No encontrado'); return;}
  #cliente_id.value=x.cliente_id; #razon_social.value=x.razon_social; #rfc.value=x.rfc;
  #telefono.value=x.telefono||''; #email.value=x.email||''; #email_principal.value=x.email_principal||'';
  #observaciones.value=x.observaciones||''; #pdfs.value=''; contactosDiv.innerHTML='';
  (x.contactos||[]).forEach(c=>addContacto(c.nombre,c.telefono||'',c.area||'',c.email||'')); if((x.contactos||[]).length===0){addContacto('Contacto 1','','General','');}
  window.scrollTo({top:0,behavior:'smooth'});
}
#btnAddContacto.onclick = ()=> addContacto();
#frmCliente.addEventListener('submit', guardarCliente);
#btnRefrescar.onclick = cargarClientes;
#btnNuevo.onclick = limpiarFormulario;
#filtro.addEventListener('input', cargarClientes);
limpiarFormulario(); cargarClientes();
</script>
</body></html>
